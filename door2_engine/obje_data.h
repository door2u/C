#include "obje.h"

void Load(std::vector<ObjeInit> &objeInitList, std::vector<ObjeDyna> &objeDynaList, std::vector<ObjeStat> &objeStatList, Came came, bool prin = false) {

	ObjeInit objeInit;
	Vert vert;
	Poly poly;
	unsigned int o = 0;

	objeInit.iden = o;
	objeInit.name = "cube";
	objeInit.rota.x = 0.0;
	objeInit.rota.y = 0.0;
	objeInit.rota.z = 0.0;
	objeInit.scal.x = 1.0;
	objeInit.scal.y = 1.0;
	objeInit.scal.z = 1.0;
	objeInit.loca.x = 0.0;
	objeInit.loca.y = 20.0;
	objeInit.loca.z = 1.0;
	objeInit.stat = true;
	vert.x = -1.0;
	vert.y = -1.0;
	vert.z = -1.0;
	objeInit.vertList.push_back(vert);
	vert.x = -1.0;
	vert.y = -1.0;
	vert.z = 1.0;
	objeInit.vertList.push_back(vert);
	vert.x = -1.0;
	vert.y = 1.0;
	vert.z = -1.0;
	objeInit.vertList.push_back(vert);
	vert.x = -1.0;
	vert.y = 1.0;
	vert.z = 1.0;
	objeInit.vertList.push_back(vert);
	vert.x = 1.0;
	vert.y = -1.0;
	vert.z = -1.0;
	objeInit.vertList.push_back(vert);
	vert.x = 1.0;
	vert.y = -1.0;
	vert.z = 1.0;
	objeInit.vertList.push_back(vert);
	vert.x = 1.0;
	vert.y = 1.0;
	vert.z = -1.0;
	objeInit.vertList.push_back(vert);
	vert.x = 1.0;
	vert.y = 1.0;
	vert.z = 1.0;
	objeInit.vertList.push_back(vert);
	poly.inde.a = 1;
	poly.inde.b = 2;
	poly.inde.c = 0;
	poly.norm.x = -1.0;
	poly.norm.y = 0.0;
	poly.norm.z = 0.0;
	poly.colo.x = 1.0;
	poly.colo.y = 0.0;
	poly.colo.z = 0.0;
	objeInit.polyList.push_back(poly);
	poly.inde.a = 3;
	poly.inde.b = 6;
	poly.inde.c = 2;
	poly.norm.x = 0.0;
	poly.norm.y = 1.0;
	poly.norm.z = -0.0;
	poly.colo.x = 0.0;
	poly.colo.y = 1.0;
	poly.colo.z = 0.0;
	objeInit.polyList.push_back(poly);
	poly.inde.a = 7;
	poly.inde.b = 4;
	poly.inde.c = 6;
	poly.norm.x = 1.0;
	poly.norm.y = 0.0;
	poly.norm.z = -0.0;
	poly.colo.x = 0.0;
	poly.colo.y = 1.0;
	poly.colo.z = 1.0;
	objeInit.polyList.push_back(poly);
	poly.inde.a = 5;
	poly.inde.b = 0;
	poly.inde.c = 4;
	poly.norm.x = 0.0;
	poly.norm.y = -1.0;
	poly.norm.z = 0.0;
	poly.colo.x = 1.0;
	poly.colo.y = 0.0;
	poly.colo.z = 1.0;
	objeInit.polyList.push_back(poly);
	poly.inde.a = 6;
	poly.inde.b = 0;
	poly.inde.c = 2;
	poly.norm.x = 0.0;
	poly.norm.y = 0.0;
	poly.norm.z = -1.0;
	poly.colo.x = 0.0;
	poly.colo.y = 0.0;
	poly.colo.z = 1.0;
	objeInit.polyList.push_back(poly);
	poly.inde.a = 3;
	poly.inde.b = 5;
	poly.inde.c = 7;
	poly.norm.x = 0.0;
	poly.norm.y = 0.0;
	poly.norm.z = 1.0;
	poly.colo.x = 1.0;
	poly.colo.y = 1.0;
	poly.colo.z = 0.0;
	objeInit.polyList.push_back(poly);
	poly.inde.a = 1;
	poly.inde.b = 3;
	poly.inde.c = 2;
	poly.norm.x = -1.0;
	poly.norm.y = 0.0;
	poly.norm.z = 0.0;
	poly.colo.x = 1.0;
	poly.colo.y = 0.0;
	poly.colo.z = 0.0;
	objeInit.polyList.push_back(poly);
	poly.inde.a = 3;
	poly.inde.b = 7;
	poly.inde.c = 6;
	poly.norm.x = 0.0;
	poly.norm.y = 1.0;
	poly.norm.z = -0.0;
	poly.colo.x = 0.0;
	poly.colo.y = 1.0;
	poly.colo.z = 0.0;
	objeInit.polyList.push_back(poly);
	poly.inde.a = 7;
	poly.inde.b = 5;
	poly.inde.c = 4;
	poly.norm.x = 1.0;
	poly.norm.y = 0.0;
	poly.norm.z = 0.0;
	poly.colo.x = 0.0;
	poly.colo.y = 1.0;
	poly.colo.z = 1.0;
	objeInit.polyList.push_back(poly);
	poly.inde.a = 5;
	poly.inde.b = 1;
	poly.inde.c = 0;
	poly.norm.x = 0.0;
	poly.norm.y = -1.0;
	poly.norm.z = 0.0;
	poly.colo.x = 1.0;
	poly.colo.y = 0.0;
	poly.colo.z = 1.0;
	objeInit.polyList.push_back(poly);
	poly.inde.a = 6;
	poly.inde.b = 4;
	poly.inde.c = 0;
	poly.norm.x = 0.0;
	poly.norm.y = 0.0;
	poly.norm.z = -1.0;
	poly.colo.x = 0.0;
	poly.colo.y = 0.0;
	poly.colo.z = 1.0;
	objeInit.polyList.push_back(poly);
	poly.inde.a = 3;
	poly.inde.b = 1;
	poly.inde.c = 5;
	poly.norm.x = 0.0;
	poly.norm.y = -0.0;
	poly.norm.z = 1.0;
	poly.colo.x = 1.0;
	poly.colo.y = 1.0;
	poly.colo.z = 0.0;
	objeInit.polyList.push_back(poly);
	objeInitList.push_back(objeInit);
	o++;

	for (unsigned int a = 0; a < objeInitList.size(); a++) {
		objeInitList[a].Init(came, true, prin);
		if (objeInitList[a].stat == false) {
			ObjeDyna objeDyna;
			objeDyna = objeInitList[a];
			objeDynaList.push_back(objeDyna);
		}
		else if (objeInitList[a].stat == true) {
			ObjeStat objeStat;
			objeStat = objeInitList[a];
			objeStatList.push_back(objeStat);
		}
	}

}
